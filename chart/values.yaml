# -- Internal settings used with `helm template` to generate install manifest
# @ignored
templating:
  enabled: false
  debug: false
  version: ~

global:
    image:
      # -- (string) Global value that allows to set a single image registry across all deployments.
      # When set, it will override any values set under `.image.registry` across the chart.
      registry: registry1.dso.mil
      pullPolicy: IfNotPresent
    imagePullSecrets:
      - name: private-registry
    resyncPeriod: 15m
upstream:
  nameOverride: kyverno
  fullnameOverride: kyverno
  namespaceOverride: ~
  upgrade:
    # -- Upgrading from v2 to v3 is not allowed by default, set this to true once changes have been reviewed.
    fromV2: true
  apiVersionOverride:
    # -- (string) Override api version used to create `PodDisruptionBudget`` resources.
    # When not specified the chart will check if `policy/v1/PodDisruptionBudget` is available to
    # determine the api version automatically.
    podDisruptionBudget: policy/v1
  # CRDs configuration
  crds:
    install: true
    groups:
      image:
        registry: ~
        defaultRegistry: registry1.dso.mil
        repository: ironbank/opensource/kyverno/kyvernocli
        tag: 'v1.14.4'
        pullPolicy: ~
      imagePullSecrets:
        - name: private-registry
    migration:
      enabled: true
      image:
        defaultRegistry: registry1.dso.mil
        repository: ironbank/opensource/kyverno/kyvernocli
        tag: 'v1.14.4'
      imagePullSecrets:
        - name: private-registry
    # -- Security context for the pod
    podSecurityContext:
      runAsUser: 1000
      runAsGroup: 1000
      runAsNonRoot: true
      securityContext:
        runAsUser: 65534
        runAsGroup: 65534
        runAsNonRoot: true
        privileged: false
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        capabilities:
          drop:
            - ALL
        seccompProfile:
          type: RuntimeDefault

  # Configuration
  config:
    defaultRegistry: registry1.dso.mil
    resourceFilters:
      - '[Event,*,*]'
      - '[*/*,kube-system,*]'
      - '[*/*,kube-public,*]'
      - '[*/*,kube-node-lease,*]'
      - '[Node,*,*]'
      - '[Node/*,*,*]'
      - '[APIService,*,*]'
      - '[APIService/*,*,*]'
      - '[TokenReview,*,*]'
      - '[SubjectAccessReview,*,*]'
      - '[SelfSubjectAccessReview,*,*]'
      - '[Binding,*,*]'
      - '[Pod/binding,*,*]'
      - '[ReplicaSet,*,*]'
      - '[ReplicaSet/*,*,*]'
      - '[EphemeralReport,*,*]'
      - '[ClusterEphemeralReport,*,*]'
      # exclude resources from the chart
      - '[ClusterRole,*,{{ template "kyverno.admission-controller.roleName" . }}]'
      - '[ClusterRole,*,{{ template "kyverno.admission-controller.roleName" . }}:core]'
      - '[ClusterRole,*,{{ template "kyverno.admission-controller.roleName" . }}:additional]'
      - '[ClusterRole,*,{{ template "kyverno.background-controller.roleName" . }}]'
      - '[ClusterRole,*,{{ template "kyverno.background-controller.roleName" . }}:core]'
      - '[ClusterRole,*,{{ template "kyverno.background-controller.roleName" . }}:additional]'
      - '[ClusterRole,*,{{ template "kyverno.cleanup-controller.roleName" . }}]'
      - '[ClusterRole,*,{{ template "kyverno.cleanup-controller.roleName" . }}:core]'
      - '[ClusterRole,*,{{ template "kyverno.cleanup-controller.roleName" . }}:additional]'
      - '[ClusterRole,*,{{ template "kyverno.reports-controller.roleName" . }}]'
      - '[ClusterRole,*,{{ template "kyverno.reports-controller.roleName" . }}:core]'
      - '[ClusterRole,*,{{ template "kyverno.reports-controller.roleName" . }}:additional]'
      - '[ClusterRoleBinding,*,{{ template "kyverno.admission-controller.roleName" . }}]'
      - '[ClusterRoleBinding,*,{{ template "kyverno.background-controller.roleName" . }}]'
      - '[ClusterRoleBinding,*,{{ template "kyverno.cleanup-controller.roleName" . }}]'
      - '[ClusterRoleBinding,*,{{ template "kyverno.reports-controller.roleName" . }}]'
      - '[ServiceAccount,{{ include "kyverno.namespace" . }},{{ template "kyverno.admission-controller.serviceAccountName" . }}]'
      - '[ServiceAccount/*,{{ include "kyverno.namespace" . }},{{ template "kyverno.admission-controller.serviceAccountName" . }}]'
      - '[ServiceAccount,{{ include "kyverno.namespace" . }},{{ template "kyverno.background-controller.serviceAccountName" . }}]'
      - '[ServiceAccount/*,{{ include "kyverno.namespace" . }},{{ template "kyverno.background-controller.serviceAccountName" . }}]'
      - '[ServiceAccount,{{ include "kyverno.namespace" . }},{{ template "kyverno.cleanup-controller.serviceAccountName" . }}]'
      - '[ServiceAccount/*,{{ include "kyverno.namespace" . }},{{ template "kyverno.cleanup-controller.serviceAccountName" . }}]'
      - '[ServiceAccount,{{ include "kyverno.namespace" . }},{{ template "kyverno.reports-controller.serviceAccountName" . }}]'
      - '[ServiceAccount/*,{{ include "kyverno.namespace" . }},{{ template "kyverno.reports-controller.serviceAccountName" . }}]'
      - '[Role,{{ include "kyverno.namespace" . }},{{ template "kyverno.admission-controller.roleName" . }}]'
      - '[Role,{{ include "kyverno.namespace" . }},{{ template "kyverno.background-controller.roleName" . }}]'
      - '[Role,{{ include "kyverno.namespace" . }},{{ template "kyverno.cleanup-controller.roleName" . }}]'
      - '[Role,{{ include "kyverno.namespace" . }},{{ template "kyverno.reports-controller.roleName" . }}]'
      - '[RoleBinding,{{ include "kyverno.namespace" . }},{{ template "kyverno.admission-controller.roleName" . }}]'
      - '[RoleBinding,{{ include "kyverno.namespace" . }},{{ template "kyverno.background-controller.roleName" . }}]'
      - '[RoleBinding,{{ include "kyverno.namespace" . }},{{ template "kyverno.cleanup-controller.roleName" . }}]'
      - '[RoleBinding,{{ include "kyverno.namespace" . }},{{ template "kyverno.reports-controller.roleName" . }}]'
      - '[ConfigMap,{{ include "kyverno.namespace" . }},{{ template "kyverno.config.configMapName" . }}]'
      - '[ConfigMap,{{ include "kyverno.namespace" . }},{{ template "kyverno.config.metricsConfigMapName" . }}]'
      - '[Deployment,{{ include "kyverno.namespace" . }},{{ template "kyverno.admission-controller.name" . }}]'
      - '[Deployment/*,{{ include "kyverno.namespace" . }},{{ template "kyverno.admission-controller.name" . }}]'
      - '[Deployment,{{ include "kyverno.namespace" . }},{{ template "kyverno.background-controller.name" . }}]'
      - '[Deployment/*,{{ include "kyverno.namespace" . }},{{ template "kyverno.background-controller.name" . }}]'
      - '[Deployment,{{ include "kyverno.namespace" . }},{{ template "kyverno.cleanup-controller.name" . }}]'
      - '[Deployment/*,{{ include "kyverno.namespace" . }},{{ template "kyverno.cleanup-controller.name" . }}]'
      - '[Deployment,{{ include "kyverno.namespace" . }},{{ template "kyverno.reports-controller.name" . }}]'
      - '[Deployment/*,{{ include "kyverno.namespace" . }},{{ template "kyverno.reports-controller.name" . }}]'
      - '[Pod,{{ include "kyverno.namespace" . }},{{ template "kyverno.admission-controller.name" . }}-*]'
      - '[Pod/*,{{ include "kyverno.namespace" . }},{{ template "kyverno.admission-controller.name" . }}-*]'
      - '[Pod,{{ include "kyverno.namespace" . }},{{ template "kyverno.background-controller.name" . }}-*]'
      - '[Pod/*,{{ include "kyverno.namespace" . }},{{ template "kyverno.background-controller.name" . }}-*]'
      - '[Pod,{{ include "kyverno.namespace" . }},{{ template "kyverno.cleanup-controller.name" . }}-*]'
      - '[Pod/*,{{ include "kyverno.namespace" . }},{{ template "kyverno.cleanup-controller.name" . }}-*]'
      - '[Pod,{{ include "kyverno.namespace" . }},{{ template "kyverno.reports-controller.name" . }}-*]'
      - '[Pod/*,{{ include "kyverno.namespace" . }},{{ template "kyverno.reports-controller.name" . }}-*]'
      - '[Job,{{ include "kyverno.namespace" . }},{{ template "kyverno.fullname" . }}-hook-pre-delete]'
      - '[Job/*,{{ include "kyverno.namespace" . }},{{ template "kyverno.fullname" . }}-hook-pre-delete]'
      - '[Job,{{ include "kyverno.namespace" . }},{{ template "kyverno.fullname" . }}-clean-reports]'
      - '[Job/*,{{ include "kyverno.namespace" . }},{{ template "kyverno.fullname" . }}-clean-reports]'
      - '[NetworkPolicy,{{ include "kyverno.namespace" . }},{{ template "kyverno.admission-controller.name" . }}]'
      - '[NetworkPolicy/*,{{ include "kyverno.namespace" . }},{{ template "kyverno.admission-controller.name" . }}]'
      - '[NetworkPolicy,{{ include "kyverno.namespace" . }},{{ template "kyverno.background-controller.name" . }}]'
      - '[NetworkPolicy/*,{{ include "kyverno.namespace" . }},{{ template "kyverno.background-controller.name" . }}]'
      - '[NetworkPolicy,{{ include "kyverno.namespace" . }},{{ template "kyverno.cleanup-controller.name" . }}]'
      - '[NetworkPolicy/*,{{ include "kyverno.namespace" . }},{{ template "kyverno.cleanup-controller.name" . }}]'
      - '[NetworkPolicy,{{ include "kyverno.namespace" . }},{{ template "kyverno.reports-controller.name" . }}]'
      - '[NetworkPolicy/*,{{ include "kyverno.namespace" . }},{{ template "kyverno.reports-controller.name" . }}]'
      - '[PodDisruptionBudget,{{ include "kyverno.namespace" . }},{{ template "kyverno.admission-controller.name" . }}]'
      - '[PodDisruptionBudget/*,{{ include "kyverno.namespace" . }},{{ template "kyverno.admission-controller.name" . }}]'
      - '[PodDisruptionBudget,{{ include "kyverno.namespace" . }},{{ template "kyverno.background-controller.name" . }}]'
      - '[PodDisruptionBudget/*,{{ include "kyverno.namespace" . }},{{ template "kyverno.background-controller.name" . }}]'
      - '[PodDisruptionBudget,{{ include "kyverno.namespace" . }},{{ template "kyverno.cleanup-controller.name" . }}]'
      - '[PodDisruptionBudget/*,{{ include "kyverno.namespace" . }},{{ template "kyverno.cleanup-controller.name" . }}]'
      - '[PodDisruptionBudget,{{ include "kyverno.namespace" . }},{{ template "kyverno.reports-controller.name" . }}]'
      - '[PodDisruptionBudget/*,{{ include "kyverno.namespace" . }},{{ template "kyverno.reports-controller.name" . }}]'
      - '[Service,{{ include "kyverno.namespace" . }},{{ template "kyverno.admission-controller.serviceName" . }}]'
      - '[Service/*,{{ include "kyverno.namespace" . }},{{ template "kyverno.admission-controller.serviceName" . }}]'
      - '[Service,{{ include "kyverno.namespace" . }},{{ template "kyverno.admission-controller.serviceName" . }}-metrics]'
      - '[Service/*,{{ include "kyverno.namespace" . }},{{ template "kyverno.admission-controller.serviceName" . }}-metrics]'
      - '[Service,{{ include "kyverno.namespace" . }},{{ template "kyverno.background-controller.name" . }}-metrics]'
      - '[Service/*,{{ include "kyverno.namespace" . }},{{ template "kyverno.background-controller.name" . }}-metrics]'
      - '[Service,{{ include "kyverno.namespace" . }},{{ template "kyverno.cleanup-controller.name" . }}]'
      - '[Service/*,{{ include "kyverno.namespace" . }},{{ template "kyverno.cleanup-controller.name" . }}]'
      - '[Service,{{ include "kyverno.namespace" . }},{{ template "kyverno.cleanup-controller.name" . }}-metrics]'
      - '[Service/*,{{ include "kyverno.namespace" . }},{{ template "kyverno.cleanup-controller.name" . }}-metrics]'
      - '[Service,{{ include "kyverno.namespace" . }},{{ template "kyverno.reports-controller.name" . }}-metrics]'
      - '[Service/*,{{ include "kyverno.namespace" . }},{{ template "kyverno.reports-controller.name" . }}-metrics]'
      - '[ServiceMonitor,{{ if .Values.admissionController.serviceMonitor.namespace }}{{ .Values.admissionController.serviceMonitor.namespace }}{{ else }}{{ template "kyverno.namespace" . }}{{ end }},{{ template "kyverno.admission-controller.name" . }}]'
      - '[ServiceMonitor,{{ if .Values.admissionController.serviceMonitor.namespace }}{{ .Values.admissionController.serviceMonitor.namespace }}{{ else }}{{ template "kyverno.namespace" . }}{{ end }},{{ template "kyverno.background-controller.name" . }}]'
      - '[ServiceMonitor,{{ if .Values.admissionController.serviceMonitor.namespace }}{{ .Values.admissionController.serviceMonitor.namespace }}{{ else }}{{ template "kyverno.namespace" . }}{{ end }},{{ template "kyverno.cleanup-controller.name" . }}]'
      - '[ServiceMonitor,{{ if .Values.admissionController.serviceMonitor.namespace }}{{ .Values.admissionController.serviceMonitor.namespace }}{{ else }}{{ template "kyverno.namespace" . }}{{ end }},{{ template "kyverno.reports-controller.name" . }}]'
      - '[Secret,{{ include "kyverno.namespace" . }},{{ template "kyverno.admission-controller.serviceName" . }}.{{ template "kyverno.namespace" . }}.svc.*]'
      - '[Secret,{{ include "kyverno.namespace" . }},{{ template "kyverno.cleanup-controller.name" . }}.{{ template "kyverno.namespace" . }}.svc.*]'

  # -- Existing Image pull secrets for image verification policies, this will define the `--imagePullSecrets` argument
  existingImagePullSecrets:
    - private-registry
  webhooksCleanup:
    # -- Create a helm pre-delete hook to cleanup webhooks.
    enabled: true
    image:
      registry: registry1.dso.mil
      repository: ironbank/opensource/kubernetes/kubectl
      tag: 'v1.32.7'
      pullPolicy: ~
    imagePullSecrets:
      - name: private-registry
    automountServiceAccountToken:
      enabled: true
    podSecurityContext:
      runAsUser: 1001
      runAsGroup: 1001
      runAsNonRoot: true
    securityContext:
      runAsUser: 1001
      runAsGroup: 1001
      runAsNonRoot: true
      privileged: false
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      capabilities:
        drop:
          - ALL
      seccompProfile:
        type: RuntimeDefault
    resources:
      limits:
        cpu: "0.5"
        memory: "256Mi"
      requests:
        cpu: "0.5"
        memory: "256Mi"
  policyReportsCleanup:
    enabled: false
    automountServiceAccountToken:
      enabled: true
    image:
      registry: registry1.dso.mil
      repository: ironbank/opensource/kubernetes/kubectl
      tag: 'v1.32.7'
    imagePullSecrets:
      - name: private-registry
    podSecurityContext:
      runAsUser: 1001
      runAsGroup: 1001
      runAsNonRoot: true
    securityContext:
      runAsUser: 1001
      runAsGroup: 1001
      runAsNonRoot: true
      privileged: false
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      capabilities:
        drop:
          - ALL
      seccompProfile:
        type: RuntimeDefault
    # -- Resource limits for the containers
    resources:
      limits:
        cpu: "1"
        memory: "512Mi"
      requests:
        cpu: "0.5"
        memory: "256Mi"
  grafana:
    enabled: false
  features:
    policyExceptions:
      enabled: false
      namespace: 'kyverno'
  cleanupJobs:
    rbac:
      serviceAccount:
        automountServiceAccountToken:
          enabled: false
    admissionReports:
      enabled: true
      automountServiceAccountToken:
        enabled: true
      backoffLimit: 3
      image:
        registry: registry1.dso.mil
        repository: ironbank/opensource/kubernetes/kubectl
        tag: 'v1.32.7'
      imagePullSecrets:
        - name: private-registry
      # -- Cronjob schedule
      schedule: '*/10 * * * *'
      # -- Reports threshold, if number of reports are above this value the cronjob will start deleting them
      threshold: 10000
      # -- Cronjob history
      history:
        success: 1
        failure: 1
      # -- Security context for the pod
      podSecurityContext:
        runAsUser: 1000
        runAsGroup: 1000
        runAsNonRoot: true
      # -- Security context for the containers
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        privileged: false
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        capabilities:
          drop:
            - ALL
        seccompProfile:
          type: RuntimeDefault
    clusterAdmissionReports:
      # -- Enable cleanup cronjob
      enabled: true
      automountServiceAccountToken:
        enabled: true
      backoffLimit: 3
      image:
        registry: registry1.dso.mil
        repository: ironbank/opensource/kubernetes/kubectl
        tag: 'v1.32.7'
        pullPolicy: ~
      # -- Image pull secrets
      imagePullSecrets:
        - name: private-registry
      # -- Cronjob schedule
      schedule: '*/10 * * * *'
      # -- Reports threshold, if number of reports are above this value the cronjob will start deleting them
      threshold: 10000
      # -- Cronjob history
      history:
        success: 1
        failure: 1
      # -- Security context for the pod
      podSecurityContext:
        runAsUser: 1000
        runAsGroup: 1000
        runAsNonRoot: true
      # -- Security context for the containers
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        privileged: false
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        capabilities:
          drop:
            - ALL
        seccompProfile:
          type: RuntimeDefault
    updateRequests:
      enabled: true
      automountServiceAccountToken:
        enabled: true
      backoffLimit: 3
      ttlSecondsAfterFinished: ""
      image:
        registry: registry1.dso.mil
        repository: ironbank/opensource/kubernetes/kubectl
        tag: 'v1.32.7'
        pullPolicy: ~
      # -- Image pull secrets
      imagePullSecrets:
        - name: private-registry
      # -- Cronjob schedule
      schedule: '*/10 * * * *'
      # -- Security context for the pod
      podSecurityContext:
        runAsUser: 1000
        runAsGroup: 1000
        runAsNonRoot: true
      # -- Security context for the containers
      securityContext:
        runAsNonRoot: true
        privileged: false
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        capabilities:
          drop:
            - ALL
        seccompProfile:
          type: RuntimeDefault
    ephemeralReports:
      enabled: true
      automountServiceAccountToken:
        enabled: true
      backoffLimit: 3
      ttlSecondsAfterFinished: ""
      image:
        registry: registry1.dso.mil
        repository: ironbank/opensource/kubernetes/kubectl
        tag: 'v1.32.7'
        pullPolicy: ~
      imagePullSecrets:
        - name: private-registry
      schedule: '*/10 * * * *'
      threshold: 10000
      # -- Security context for the pod
      podSecurityContext:
        runAsUser: 1001
        runAsGroup: 1001
        runAsNonRoot: true
      # -- Security context for the containers
      securityContext:
        runAsNonRoot: true
        privileged: false
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        capabilities:
          drop:
            - ALL
        seccompProfile:
          type: RuntimeDefault
    clusterEphemeralReports:
      enabled: true
      automountServiceAccountToken:
        enabled: true
      backoffLimit: 3
      ttlSecondsAfterFinished: ""
      image:
        registry: registry1.dso.mil
        repository: ironbank/opensource/kubernetes/kubectl
        tag: 'v1.32.7'
        pullPolicy: ~
      imagePullSecrets:
        - name: private-registry
      # -- Cronjob schedule
      schedule: '*/10 * * * *'
      # -- Reports threshold, if number of reports are above this value the cronjob will start deleting them
      threshold: 10000
      # -- Cronjob history
      history:
        success: 1
        failure: 1
      # -- Security context for the pod
      podSecurityContext:
        runAsUser: 1001
        runAsGroup: 1001
        runAsNonRoot: true
      # -- Security context for the containers
      securityContext:
        runAsNonRoot: true
        privileged: false
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        capabilities:
          drop:
            - ALL
        seccompProfile:
          type: RuntimeDefault

  # Admission controller configuration
  admissionController:
    rbac:
      serviceAccount:
        automountServiceAccountToken:
          enabled: false
      deployment:
        automountServiceAccountToken:
          enabled: true
      coreClusterRole:
        extraResources:
          - apiGroups:
              - '*'
            resources:
              - '*'
            verbs:
              - get
              - list
              - watch

      clusterRole:
        # -- Extra resource permissions to add in the cluster role
        extraResources:
          - apiGroups:
              - '*'
            resources:
              - '*'
            verbs:
              - get
              - list
              - watch
    # -- Create self-signed certificates at deployment time.
    # The certificates won't be automatically renewed if this is set to `true`.
    createSelfSignedCert: false
    # -- (int) Desired number of pods
    replicas: 3
    podSecurityContext:
      runAsUser: 10001
      runAsGroup: 10001
      runAsNonRoot: true
    podDisruptionBudget:
      enabled: false
    imagePullSecrets:
      - name: private-registry
    initContainer:
      image:
        registry: ~
        defaultRegistry: registry1.dso.mil
        repository: ironbank/opensource/kyverno/kyvernopre
        tag: 'v1.14.4'
        pullPolicy: ~
      resources:
        # -- Pod resource limits
        limits:
          cpu: 1
          memory: 1Gi
        # -- Pod resource requests
        requests:
          cpu: 10m
          memory: 64Mi
      # -- Container security context
      securityContext:
        runAsNonRoot: true
        runAsUser: 10001
        runAsGroup: 10001
        privileged: false
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        capabilities:
          drop:
            - ALL
        seccompProfile:
          type: RuntimeDefault
    container:
      image:
        defaultRegistry: registry1.dso.mil
        repository: ironbank/opensource/kyverno
        tag: 'v1.14.4'
        pullPolicy: IfNotPresent
      imagePullSecrets:
        - name: private-registry
      resources:
        limits:
          cpu: 500m
          memory: 512Mi
        requests:
          cpu: 500m
          memory: 512Mi
      securityContext:
        runAsNonRoot: true
        runAsUser: 10001
        runAsGroup: 10001
        privileged: false
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        capabilities:
          drop:
            - ALL
        seccompProfile:
          type: RuntimeDefault
  # Background controller configuration
  backgroundController:
    enabled: true
    rbac:
      create: true
      serviceAccount:
        automountServiceAccountToken:
          enabled: false
      deployment:
        # disable mounting serviceAccount token to the pods
        automountServiceAccountToken:
          enabled: true
      coreClusterRole:
        extraResources:
          - apiGroups:
              - networking.k8s.io
            resources:
              - ingresses
              - ingressclasses
              - networkpolicies
            verbs:
              - create
              - update
              - patch
              - delete
          - apiGroups:
              - rbac.authorization.k8s.io
            resources:
              - rolebindings
              - roles
            verbs:
              - create
              - update
              - patch
              - delete
          - apiGroups:
              - '*'
            resources:
              - configmaps
              - resourcequotas
              - limitranges
            verbs:
              - create
              - update
              - patch
              - delete
          - apiGroups:
              - '*'
            resources:
              - serviceaccounts
            verbs:
              - get
              - list
              - watch
              - update
              - patch
      clusterRole:
        # -- Extra resource permissions to add in the cluster role
        extraResources:
          - apiGroups:
              - '*'
            resources:
              - '*'
            verbs:
              - get
              - list
              - watch
          - apiGroups:
              - '*'
            resources:
              - secrets
            verbs:
              - create
              - update
              - delete
    image:
      defaultRegistry: registry1.dso.mil
      repository: ironbank/opensource/kyverno/kyverno/background-controller
      tag: 'v1.14.4'
    imagePullSecrets:
      - name: private-registry
    podSecurityContext:
      runAsUser: 1000
      runAsGroup: 1000
      runAsNonRoot: true
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
      runAsGroup: 1000
      privileged: false
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      capabilities:
        drop:
          - ALL
      seccompProfile:
        type: RuntimeDefault
  cleanupController:
    enabled: true
    rbac:
      create: true
      serviceAccount:
        automountServiceAccountToken:
          enabled: false
      deployment:
        # disable mounting serviceAccount token to the pods
        automountServiceAccountToken:
          enabled: true

    image:
      defaultRegistry: registry1.dso.mil
      repository: ironbank/opensource/kyverno/kyverno/cleanup-controller
      tag: 'v1.14.4'
      pullPolicy: IfNotPresent
    imagePullSecrets:
      - name: private-registry
    podSecurityContext:
      runAsUser: 1000
      runAsGroup: 1000
      runAsNonRoot: true
    # -- Security context for the containers
    securityContext:
      runAsUser: 1000
      runAsGroup: 1000
      runAsNonRoot: true
      privileged: false
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      capabilities:
        drop:
          - ALL
      seccompProfile:
        type: RuntimeDefault
  reportsController:
    enabled: true
    rbac:
      create: true
      serviceAccount:
        automountServiceAccountToken:
          enabled: false
      deployment:
        automountServiceAccountToken:
          enabled: true
      coreClusterRole:
        extraResources:
          - apiGroups:
              - '*'
            resources:
              - '*'
            verbs:
              - get
              - list
              - watch
      clusterRole:
        # -- Extra resource permissions to add in the cluster role
        extraResources:
          - apiGroups:
              - '*'
            resources:
              - '*'
            verbs:
              - get
              - list
              - watch
    image:
      defaultRegistry: registry1.dso.mil
      repository: ironbank/opensource/kyverno/kyverno/reports-controller
      tag: 'v1.14.4'
      pullPolicy: IfNotPresent
    imagePullSecrets:
      - name: private-registry
    podSecurityContext:
      runAsUser: 1000
      runAsGroup: 1000
      runAsNonRoot: true
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
      runAsGroup: 1000
      privileged: false
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      capabilities:
        drop:
          - ALL
      seccompProfile:
        type: RuntimeDefault

  # Tests configuration
  test:
    # -- Sleep time before running test
    sleep: 20
    image:
      registry: registry1.dso.mil
      repository: ironbank/frontiertechnology/cortex/busybox
      tag: 'v1.37.0'
      pullPolicy: ~
    imagePullSecrets:
      - name: private-registry
    resources:
      # -- Pod resource limits
      limits:
        cpu: 100m
        memory: 256Mi
      # -- Pod resource requests
      requests:
        cpu: 10m
        memory: 64Mi
    # -- Security context for the test pod
    podSecurityContext:
      runAsUser: 65534
      runAsGroup: 65534
      runAsNonRoot: true
    # -- Security context for the test containers
    securityContext:
      runAsUser: 65534
      runAsGroup: 65534
      runAsNonRoot: true
      privileged: false
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      capabilities:
        drop:
          - ALL
      seccompProfile:
        type: RuntimeDefault

## Bigbang Additions

## Use serviceMonitor instead
# monitoring:
#   enabled: false
networkPolicies:
  enabled: false
  # See `kubectl cluster-info` and then resolve to IP
  controlPlaneCidr: 0.0.0.0/0
  # Required if the container registry exists must be accessed over the internet
  externalRegistries:
    allowEgress: false
    ports: []
    # ports:
    # - port: 1234
    #   protocol: TCP
  allowExternalRegistryEgress: false
  additionalPolicies: []
istio:
  enabled: false
openshift: false
bbtests:
  enabled: false
  scripts:
    image: registry1.dso.mil/ironbank/opensource/kubernetes/kubectl:v1.32.7
    additionalVolumeMounts:
      - name: "kyverno-bbtest-manifest"
        mountPath: /yaml
    additionalVolumes:
      - name: "kyverno-bbtest-manifest"
        configMap:
          name: "kyverno-bbtest-manifest"


